[
    {
        "id": "955fd97ce4960458",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dht_in",
        "type": "mqtt in",
        "z": "955fd97ce4960458",
        "name": "DHT Input",
        "topic": "warehouse/dht",
        "qos": "0",
        "datatype": "json",
        "broker": "mqtt_broker",
        "inputs": 0,
        "x": 180,
        "y": 400,
        "wires": [
            [
                "temp_fn",
                "hum_fn",
                "dht_chart_fn",
                "91fa2f6697131699"
            ]
        ]
    },
    {
        "id": "temp_fn",
        "type": "function",
        "z": "955fd97ce4960458",
        "name": "Extract Temp",
        "func": "msg.payload = msg.payload.temperature;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 360,
        "wires": [
            [
                "temp_gauge"
            ]
        ]
    },
    {
        "id": "hum_fn",
        "type": "function",
        "z": "955fd97ce4960458",
        "name": "Extract Humidity",
        "func": "msg.payload = msg.payload.humidity;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 440,
        "wires": [
            [
                "hum_gauge"
            ]
        ]
    },
    {
        "id": "temp_gauge",
        "type": "ui_gauge",
        "z": "955fd97ce4960458",
        "name": "Temperature",
        "group": "dashboard_group",
        "order": 2,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Temperature (°C)",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "x": 620,
        "y": 360,
        "wires": []
    },
    {
        "id": "hum_gauge",
        "type": "ui_gauge",
        "z": "955fd97ce4960458",
        "name": "Humidity",
        "group": "dashboard_group",
        "order": 3,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Humidity (%)",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00bfff",
            "#ffff00",
            "#ff0000"
        ],
        "x": 620,
        "y": 440,
        "wires": []
    },
    {
        "id": "dht_chart_fn",
        "type": "function",
        "z": "955fd97ce4960458",
        "name": "Format for Chart",
        "func": "return [\n  { topic: \"Temperature\", payload: msg.payload.temperature },\n  { topic: \"Humidity\", payload: msg.payload.humidity }\n];",
        "outputs": 2,
        "noerr": 0,
        "x": 390,
        "y": 520,
        "wires": [
            [
                "dht_chart"
            ],
            [
                "dht_chart"
            ]
        ]
    },
    {
        "id": "dht_chart",
        "type": "ui_chart",
        "z": "955fd97ce4960458",
        "name": "DHT Chart",
        "group": "dashboard_group",
        "order": 4,
        "width": 12,
        "height": 4,
        "label": "DHT Sensor Data",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No data",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff6600",
            "#3399ff",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 620,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "rfid_in",
        "type": "mqtt in",
        "z": "955fd97ce4960458",
        "name": "RFID Input",
        "topic": "warehouse/rfid",
        "qos": "0",
        "datatype": "json",
        "broker": "mqtt_broker",
        "inputs": 0,
        "x": 180,
        "y": 280,
        "wires": [
            [
                "rfid_fn",
                "91fa2f6697131699"
            ]
        ]
    },
    {
        "id": "rfid_fn",
        "type": "function",
        "z": "955fd97ce4960458",
        "name": "Format RFID Table",
        "func": "// Keep latest 10 entries\nif (!context.data) context.data = [];\n\ncontext.data.push({\n    UID: msg.payload.uid,\n    Mode: msg.payload.mode,\n    Time: new Date().toLocaleTimeString()\n});\n\nif (context.data.length > 10) context.data.shift();\n\nmsg.payload = context.data;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 280,
        "wires": [
            [
                "rfid_table"
            ]
        ]
    },
    {
        "id": "rfid_table",
        "type": "ui_table",
        "z": "955fd97ce4960458",
        "group": "dashboard_group",
        "name": "RFID Table",
        "order": 1,
        "width": "12",
        "height": "4",
        "columns": [
            {
                "field": "UID",
                "title": "RFID",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Mode",
                "title": "Mode",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 630,
        "y": 280,
        "wires": []
    },
    {
        "id": "de02b3b038cfb984",
        "type": "mqtt in",
        "z": "955fd97ce4960458",
        "name": "RFID Input",
        "topic": "warehouse/rfid",
        "qos": "2",
        "datatype": "json",
        "broker": "f3e8d2c0.c6b1b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 580,
        "wires": [
            [
                "d2f5b87d3607d59a"
            ]
        ]
    },
    {
        "id": "2d49a37cecb00897",
        "type": "ui_button",
        "z": "955fd97ce4960458",
        "name": "Set Mode: Input",
        "group": "c2bba424f8cf2066",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Input Mode",
        "tooltip": "",
        "color": "white",
        "bgcolor": "#2e7d32",
        "className": "",
        "icon": "fa-sign-in-alt",
        "payload": "input",
        "payloadType": "str",
        "topic": "warehouse/mode",
        "topicType": "str",
        "x": 300,
        "y": 680,
        "wires": [
            [
                "9f251e0c4dca5c5d",
                "352ff23ab729269b"
            ]
        ]
    },
    {
        "id": "3a76e3e6e4a34bd0",
        "type": "ui_button",
        "z": "955fd97ce4960458",
        "name": "Set Mode: Output",
        "group": "c2bba424f8cf2066",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Output Mode",
        "tooltip": "",
        "color": "white",
        "bgcolor": "#c62828",
        "className": "",
        "icon": "fa-sign-out-alt",
        "payload": "output",
        "payloadType": "str",
        "topic": "warehouse/mode",
        "topicType": "str",
        "x": 310,
        "y": 720,
        "wires": [
            [
                "9f251e0c4dca5c5d",
                "4dfcd4261638fc1b"
            ]
        ]
    },
    {
        "id": "9f251e0c4dca5c5d",
        "type": "mqtt out",
        "z": "955fd97ce4960458",
        "name": "Send Mode to ESP",
        "topic": "warehouse/mode",
        "qos": "",
        "retain": "",
        "broker": "f3e8d2c0.c6b1b",
        "x": 550,
        "y": 700,
        "wires": []
    },
    {
        "id": "d2f5b87d3607d59a",
        "type": "function",
        "z": "955fd97ce4960458",
        "name": "Update Stock",
        "func": "var uid = msg.payload.uid;\nvar mode = msg.payload.mode;\n\nvar stock = flow.get('stock') || [];\nvar found = false;\n\nfor (var i = 0; i < stock.length; i++) {\n    if (stock[i].uid === uid) {\n        found = true;\n        if (mode === \"input\") {\n            stock[i].qty += 1;\n        } else if (mode === \"output\") {\n            stock[i].qty = Math.max(0, stock[i].qty - 1);\n        }\n        break;\n    }\n}\n\nif (!found) {\n    if (mode === \"input\") {\n        stock.push({ uid: uid, qty: 1 });\n    } else {\n        // Send alert email on output scan with unregistered RFID\n        var alertMsg = {\n            payload: `⚠️ ALERT: Unregistered RFID ${uid} scanned in OUTPUT mode.\\nAction required at warehouse!`\n        };\n        return [null, alertMsg]; // Send alert to second output\n    }\n}\n\nflow.set('stock', stock);\nmsg.payload = stock;\nreturn [msg, null]; // Normal flow\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 580,
        "wires": [
            [
                "b073e38de1c94471"
            ]
        ]
    },
    {
        "id": "b073e38de1c94471",
        "type": "ui_table",
        "z": "955fd97ce4960458",
        "group": "dashboard_group",
        "name": "Stock Table",
        "order": 3,
        "width": 0,
        "height": 10,
        "columns": [
            {
                "field": "uid",
                "title": "RFID",
                "width": "40%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "qty",
                "title": "Quantity",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 710,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "352ff23ab729269b",
        "type": "debug",
        "z": "955fd97ce4960458",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 760,
        "wires": []
    },
    {
        "id": "4dfcd4261638fc1b",
        "type": "debug",
        "z": "955fd97ce4960458",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 800,
        "wires": []
    },
    {
        "id": "91fa2f6697131699",
        "type": "function",
        "z": "955fd97ce4960458",
        "name": "function 1",
        "func": "msg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\n\nmsg.payload = {\n    uid: msg.payload.uid,\n    mode: msg.payload.mode,\n    temperature: msg.payload.temperature,\n    humidity: msg.payload.humidity\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 400,
        "wires": [
            [
                "5fb59f2cbbb461eb"
            ]
        ]
    },
    {
        "id": "5fb59f2cbbb461eb",
        "type": "http request",
        "z": "955fd97ce4960458",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://script.google.com/macros/s/AKfycbzLvuGkhbe6uesrF-DDw_xlqLTKaAD7teAgOVlgjplFdRFmY-vVUfSc9znVRSOH4WZM/exec",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 830,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "mqtt_broker",
        "type": "mqtt-broker",
        "name": "HiveMQ",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "keepalive": "60",
        "cleansession": true
    },
    {
        "id": "dashboard_group",
        "type": "ui_group",
        "name": "Warehouse1",
        "tab": "283a326ee1059e6f",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f3e8d2c0.c6b1b",
        "type": "mqtt-broker",
        "name": "HiveMQ",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "c2bba424f8cf2066",
        "type": "ui_group",
        "name": "Smart Warehouse",
        "tab": "283a326ee1059e6f",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "283a326ee1059e6f",
        "type": "ui_tab",
        "name": "Home1",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]